<%
local xqlanwanutil = require "xiaoqiang.util.XQLanWanUtil"
local mode = xqlanwanutil.getWanLanMode()
local mac2default = string.upper(xqlanwanutil.getDefaultWan2MacAddress())
local mac1default = string.upper(xqlanwanutil.getDefaultWanMacAddress())
%>
<script type="tmpl/html" id="tplGoWanSetting">
    <div class="wan-setting">
        <form class="form form-horizontal">
            <div>
                <p><%:为保证正常上网，请在“常用设置”-“上网设置”中进行WAN口配置%></p>
            </div>
            <div style="height: 10px"></div>
            <div class="form-item" id="noRemindForm">
                <label style="display: flex; justify-content: center; align-items: center;" for="noRemind">
                    <input type="checkbox" id="noRemind" name="noRemind">
                    <span style="padding-left: 5px;"><%:不再提示%></span>
                </label>
            </div>
        </form>
        <div class="form-contral">
            <button type="button" class="btn btn-primary" id="gotoWanBtn"><span><%:前往上网配置设置%></span></button>
            <button type="button" class="btn btn-dft" id="cancelWanBtn"><span><%:取消%></span></button>
        </div>
    </div>
</script>
<script>
$(function() {
    var dualSelectCount = 2
    // disalog
    var wanSpeedRatioDialog = undefined
    var listaddDialog = undefined
    var selfaddDialog = undefined
    var gotoWanDialog = undefined
    var isDualWanOn = false
    var loadingDialog = false
    // 

    var routerPolicyList = []


    var bandwidth_wan1 = 0
    var bandwidth_wan2 = 0

    var DUAL_WAN_SETTING_SECTION = [
        'wan-info',
        'mac-address-clone',
        'wan-speed-ratio',
        'policy-routing'
    ]
    var MAX_ROUTER_POLICY_LIST_NUM = 1000


    // dualWanSection style
    var dualWanDisplay = (function (status) {
        return {
            show: function(){
                $(".dual-wan-body").attr('style', "display:block;")
            },
            hide: function() {
                $(".dual-wan-body").attr('style', "display:none;")
            }
        }
    })()

    var wan2Switch = (function (status) {
        return {
            on: function(){
                $('#wan2Switch').attr('class', 'btn-switch btn-switch-on')
            },
            off: function() {
                $('#wan2Switch').attr('class', 'btn-switch btn-switch-off')
            }
        }
    })()

    // sub event
    $.sub('dualWanHelp:show', function(evt, data) {
        $('#helpArrow').show();
        $('#helpSection').show();
    });
    $.sub('dualWanHelp:hide', function(evt, data) {
        $('#helpArrow').hide();
        $('#helpSection').hide();
    });



    // 获取设备列表 
    $.sub('getDevices', function() {
        $.ajax({
            url: '<%=luci.dispatcher.build_url("api", "xqnetwork","get_multiwan_dev_list")%>',
            type: "GET",
            dataType: 'json',
            success: function(res) {
                if(res.code === 0){
                    var list = res.info
                    if ($.isArray(list) && list.length > 0) {
                        var tableList = list.reduce(function(arr, item) {
                            return arr.concat(StringH.tmpl($('#tmplOnlineDevice').html(), {
                                oname: StringH.encode4Html(item.oname),
                                mac: item.mac,
                                ip: item.ip,
                                val: encodeURIComponent(JSON.stringify({
                                    oname: StringH.encode4Html(item.oname),
                                    mac: item.mac,
                                    ip: item.ip,
                                }))
                            }))
                        }, [])
                        $('#dialogdeviceslist').html(tableList.join(''));
                    } else {
                        $('#dialogdeviceslist').html('<tr><td colspan="4"><%:没有未添加的设备连接进来%></td></tr>');
                    }
                } else {
                    $('#dialogdeviceslist').html('<tr><td colspan="4"><%:没有未添加的设备连接进来%></td></tr>');
                }
            },
            error: function() {
                $.alert( '<%:网络异常，请检查是否联网%>' );
            }
        })
    })





    // 设置wan1/wan2比例
    $.sub('setWanWeight', function(evt, params, reslove, reject) {
        return $.ajax({
            url: '<%=luci.dispatcher.build_url("api", "xqnetwork","set_weight")%>',
            type: "GET",
            dataType: 'json',
            data: params,
            success: function(res) {
                if(res.code === 0) {
                    reslove && reslove()
                } else {
                    reject && reject()
                }
            },
            error: function() {
                reject && reject()
            }
        })
    });
    
    // 获取路由策略列表
    $.sub('getRouterPolicyList', function(){
        $.ajax({
            url: '<%=luci.dispatcher.build_url("api", "xqnetwork","get_multiwan_dev_policies")%>',
            type: "GET",
            dataType: 'json',
            success: function(res) {
                if(res.code === 0 && res.info && !$.isEmptyObject(res.info)) {
                    routerPolicyList = Object.keys(res.info).reduce(function(arr, key) {
                        var list = res.info[key]

                        if($.isArray(list) && list.length){
                            list.forEach(function(item, index) {
                                list[index] = $.extend({}, item, {
                                    index: index,
                                })
                            })
                        }
                        return arr.concat(res.info[key])
                    }, [])
                    if ($.isArray(routerPolicyList) && routerPolicyList.length) {
                        var tableList = routerPolicyList.reduce(function(arr, item) {
                            return arr.concat(StringH.tmpl($('#tmplRouterPolicyTable').html(), $.extend({}, item, {
                                value: JSON.stringify(item)
                            })))
                        }, [])

                        $('#policyList').html(tableList.join(''))

                        // 注册删除按钮事件
                        $('#policyList div[name="routerPolicyDeleteBtn"]').each(function(index, item) {
                            $(item).on('click', function(e) {
                                delRouterPolicy(routerPolicyList[index])
                            })
                        })
                        // 
                        $('#policyList select[name="wan"]').each(function(index, item) {
                            var row = routerPolicyList[index]
                            $(item).val(row.wan)
                            $(item).on('change', function(e) {
                                $.pub('setRouterPolicy', $.extend({}, row, {
                                    opt: 0, // 修改时opt为1
                                    wan: $(item).val() == 1 ? 'WAN1' : 'WAN2'
                                }))
                            })
                        })
                        // 美化select
                        $.selectBeautify()

                        // set selected option for every policy
                        for (i = 0; i < routerPolicyList.length; i++) {
                            var PolicyID = "policy_" + routerPolicyList[i].index
                            var SelectID = "policy_select_" + routerPolicyList[i].index
                            if (routerPolicyList[i].wan == "WAN1") {
                                $("#" + SelectID).val(1);
                                $("#" + PolicyID + " .dummy").text("<%:WAN1优先%>")
                            } else if (routerPolicyList[i].wan == "WAN2") {
                                $("#" + SelectID).val(2);
                                $("#" + PolicyID + " .dummy").text("<%:WAN2优先%>")
                            }
                        }
                    } else {
                        $('#policyList').html('<%: 还没有策略加入 %>')
                    }
                } else {
                    $.alert(res.msg)
                    $('#policyList').html('<%: 网络异常，获取列表失败 %>')
                }
            },
            error: function(err) {
                $.alert(err.msg)
                $('#tmplRouterPolicyTable').html('<%: 网络异常，获取列表失败 %>')
            }
        })
    })

    // 设置路由策略
    $.sub('setRouterPolicy', function(evt, data){
        return $.ajax({
            url: '<%=luci.dispatcher.build_url("api", "xqnetwork","set_multiwan_dev_policy")%>',
            type: "POST",
            dataType: 'json',
            data: data,
            success: function(res) {
                if(res.code === 0) {
                    $.pub('getRouterPolicyList')
                } else {
                    $.alert(res.msg)
                }
            },
            error: function(err) {
                $.alert(err.msg)
            }
        })
    })

    $.sub('wan2Switch:close', function() {
        dualWanDisplay.hide()
        wan2Switch.off()
    })

    $.sub('wan2Switch:open', function() {
        dualWanDisplay.show()
        wan2Switch.on()
        $.pub('getRouterPolicyList')
    })

    $.sub('setWan2Info:success', function(){
        loading({
            title: '<%:双WAN设置%>',
            content: '<%:双WAN设置中，请稍等...%>',
            refresh: true,
        })
    })

    $.sub('setWan2Info:error', function(evt, rsp){
        $.alert( rsp && rsp.msg );
    })

    // 填充双wan比例
    $.sub('setWanSpeedRatio', function(evt, rsp) {
        $('#wan1Speed').text(rsp.weight1)
        $('#wan2Speed').text(rsp.weight2)
    })



    $.sub('dual-wan-setting:show', function(){
        DUAL_WAN_SETTING_SECTION.forEach(function(name){
            var className = '.' + name
            $(className).attr('style', "display:block;")
        })
    });

    $.sub('dual-wan-setting:hide', function(){
        DUAL_WAN_SETTING_SECTION.forEach(function(name){
            var className = '.' + name
            $(className).attr('style', "display:none;")
        })
    });

    // 帮助提示功能
    //增加容错：否则会影响其它功能的提示
    $('.dual-wan-wrapper .help .ico').on('click', function(){
        $.pub('dualWanHelp:show');
    });
    //增加容错：否则会影响其它功能的提示
    $('.dual-wan-wrapper .help-close').on('click', function(){
        $.pub('dualWanHelp:hide');
    });

    // 从设备列表添加
    $('#btnDevicesAdd').on('click', function (e) {
        e.preventDefault();
        listaddDialog = $.dialog({
            title: '<%:设备列表%><span id="devicesRefresh" class="ico-dev-refresh"></span>',
            content: $('#tmplDevicesAdd').html(),
            lock: true,
            padding: 0,
            width: 770
        });
        // 绑定刷新设备列表事件
        $('#devicesRefresh').on('click', function() {
            $.pub('getDevices')
        })
        $.pub('getDevices')
    });
    // 提交设备列表添加
    $('body').on('submit', '#devicesAdd', function(e) {
        e.preventDefault();
        const checkList = $('.devicesInputCheck:checked')

        if(!checkList.length) {
            $.alert('<%:请至少选择一个设备%>')
            return
        }
        if((checkList.length + routerPolicyList.length) <= MAX_ROUTER_POLICY_LIST_NUM) {
            var macArr = []
            checkList.each(function(index, item){
                macArr.push((JSON.parse(decodeURIComponent(item.value))['mac']))
            })
            addRouterPolicy({
                mac: macArr.join(',')
            },false)
            listaddDialog.close()
        } else {
            $.alert('<%:错误：策略数量最大值为1000%>')
        }
    })


    // 手工添加
    $('#btnSelfAdd').on('click', function (e) {
        e.preventDefault();
        selfaddDialog = $.dialog({
            title: '<%:手工添加%>',
            content: $('#tmplAddSelf').html(),
            lock: true,
            padding: 0,
        });
        $('#selfAdd').on('submit', function(e) {
            e.preventDefault();
            var validator = Valid.checkAll( this );
            
            if ( validator ) {
                if((routerPolicyList.length <= MAX_ROUTER_POLICY_LIST_NUM - 1)) {
                    addRouterPolicy({
                        oname: $('#selfAdd input[name="oname"]').val(),
                        mac: $('#selfAdd input[name="mac"]').val()
                    }, true)
                    selfaddDialog.close()
                    setTimeout(function () {
                        $.formInit();
                    }, 100);
                } else {
                    $.alert('<%:错误：策略数量最大值为'+ MAX_ROUTER_POLICY_LIST_NUM +'%>')
                }
            }
        })
    });

    // wan口速率比设置
    $('#btnWanSpeedRatioSet').on('click', function (e) {
        e.preventDefault();

        wanSpeedRatioDialog = $.dialog({
            title: '<%:手工设置外网带宽%>',
            content: $('#tmplWanSpeedRatio').html().tmpl({
                wan1Speed: bandwidth_wan1 > 0 ? bandwidth_wan1 : '',
                wan2Speed: bandwidth_wan2 > 0 ? bandwidth_wan2 : '',
            }),
            lock: true
        })

        // 注册提交按钮事件
        $('#wanSpeedRatio').on('submit', function(e) {
            e.preventDefault();
            var validator = Valid.checkAll( this );
            if ( validator ) {
                var s1 = Number($('.wanSpeedRatio input[name="wan1Speed"]').val())
                var s2 = Number($('.wanSpeedRatio input[name="wan2Speed"]').val())
                var mode = $('#dualWanSelect').val()
                // 产品需求：s1和s2 比例限制在1～100
                if(s1/s2 < 1 && s2/s1 > 100) {
                    s1 = 1
                    s2 = 100
                }
                if(s2/s1 < 1 && s1/s2 > 100) {
                    s1 = 100
                    s2 = 1
                }

                $.pub('setDualWan', [{
                    policy:{
                        mode:mode,
                        bandwidth_wan1: s1,
                        bandwidth_wan2: s2,
                    }
                }, true])
            }
        })
    })

    $('#wan2Switch').on('click', function(e) {
        e.preventDefault()
        if($('#wan2Switch').hasClass('btn-switch-on')) {
            isDualWanOn
                ? 
                $.dialog({
                    id : "confirm",
                    width: 390,
                    title : "<%:提示信息%>",
                    content : "确认是否关闭双WAN功能",
                    ok: function(){  
                        $.pub('setDualWan', [{ enable: 0 }, false]);
                    },
                    cancel: function () {}
                }).lock()
                :
                $.pub('wan2Switch:close')
        } else {

            //必定保留有一个wan口，实际只需一个空闲端口
            if (dualSelectCount - 1 > $.idlePortCount) {
                $.noIdlePortDialog();
                return;
            }

            $.pub('wan2Switch:open')
            if($(".selectDualWanLan .listDiv.active").length == 2 && !isDualWanOn) {
                $('#btnSubmitDualWanPort').show()
            }
        }
    })


    function loading(opts){
        loadingDialog = $.loadingDialog({
            title : opts.title || '设置中',
            content : opts.content || '设置中，请稍等...',
            beforeunload: function() {
                opts.refresh && window.top.location.reload(true);
            }
        }).lock().time(opts.time || 20*1000)
    }


    // 设置在线策略路由列表
    function addRouterPolicy (payload, manual) {
        return $.pub('setRouterPolicy', [$.extend({}, payload, {
            opt: 0, // 0：添加一个MAC地址，1：删除一个MAC地址
            manual: manual?'1':'0', // 0：从设备列表添加, 1：从手工添加
            wan: 'WAN1', // 默认wan1
        })])
    }

    // 删除在线策略路由列表
    function delRouterPolicy (item) {
        $.pub('setRouterPolicy', $.extend({}, item, {
            opt: 1, // 0：添加一个MAC地址，1：删除一个MAC地址
        }))
    }

    /*
        网口自定义新增的
    */
    //获取双WAN的wan口选择信息
    $.sub( 'getDualwanPortInfo', function(){
        $('.dual-wan-wrapper').show()
        $.ajax({
            url: '<%=luci.dispatcher.build_url("api", "misystem", "get_ps_service")%>',
            dataType: 'json',
            timeout: 5000,
            type: 'GET',
            data: {"service":'multiwan'},
            success: function( rsp ){
                if( rsp.code == 0 ){
                    var multiWanInfo = rsp['multiwan'];
                    //开关
                    if( multiWanInfo.enable == 1){
                        isDualWanOn = true
                        //multiWanInfo.port_map.forEach(function(item,index){})
                        if(multiWanInfo.policy.mode == '0'){
                            $.pub('dual-wan-setting:show')
                            $("#divMultiWANMode .dummy").text("<%:带宽聚合%>")
                        }else{
                            $.pub('dual-wan-setting:hide')
                            if (multiWanInfo.policy.mode == '1') {
                                $("#divMultiWANMode .dummy").text("<%:WAN1优先，WAN2备份%>")
                            } else if (multiWanInfo.policy.mode == '2') {
                                $("#divMultiWANMode .dummy").text("<%:WAN2优先，WAN1备份%>")
                            }
                        }
                        $("#dualWanSelect").val(multiWanInfo.policy.mode);
                        $('#divMultiWANMode select[name="dualWanSelect"]').on('change', function(e) {
                            var mode = $(this).val()
                            if (mode == '0') {
                                $.pub('dual-wan-setting:show')
                            } else {
                                $.pub('dual-wan-setting:hide')
                            }
                            if($(".selectDualWanLan .listDiv.active").length == 2){
                                $('#btnSubmitDualWanPort').show()
                            }
                        })
                        $.pub('wan2Switch:open')
                        $.pub('setWanSpeedRatio', [multiWanInfo.policy])
                        bandwidth_wan1 = multiWanInfo.policy.bandwidth_wan1
                        bandwidth_wan2 = multiWanInfo.policy.bandwidth_wan2
                    }else{
                        isDualWanOn = false
                        $.pub('wan2Switch:close')
                        $.pub('dual-wan-setting:hide')
                    }
                    var config = {
                        portInfo:multiWanInfo.port_map,
                        el:'.selectDualWanLan',
                        selectCount:dualSelectCount,
                        service:'WAN2',
                        submitBtnEl:'#btnSubmitDualWanPort'
                    }
                    $.portMap(config)

                }
            }
        })
    } );
    //前往上网设置页
    function goWanSetting(){
        var href = '<%=luci.dispatcher.build_url("web", "setting", "wan")%>'
        window.location.href = href
    }
    
    $('.selectWanLink').on('click',goWanSetting)

    $.sub('setDualWan',function(evt, payload, no_port_map){
        loading({time: 30 * 1000})
        var enable = $('#wan2Switch').hasClass('btn-switch-on') ? 1 : 0
        var mode = $('#dualWanSelect').val()
        var arr = Array.prototype.slice.call($(".selectDualWanLan .listDiv"))
        var activeItem = arr.filter(function(item,index){
            return $(item).hasClass("active")
        })
        var port_map = []
        if (!no_port_map) {
            activeItem.forEach(function(item,index){
                var obj = portObj(item)
                port_map.push(obj)
            })
            if(port_map.length == 1){
                var wan1 = arr.filter(function(item,index){
                    var service = $(item).attr("data-service")
                    return service == 'WAN' || service == 'WAN1'
                })[0]
                var obj = portObj(wan1)
                port_map.unshift(obj)
            }else{
            }
        }
        var params = {
            service: "multiwan",
            enable: enable,
            port_map: port_map,
            policy: {
                mode: mode, // 0、带宽聚合(负载均衡) 1、WAN1优先 2、WAN2优先 3、WAN1 only 4、WAN2 only
                bandwidth_wan1: bandwidth_wan1, // 仅在mode 0有效
                bandwidth_wan2: bandwidth_wan2  // 仅在mode 0有效
            }
        }
        $.ajax({
            url: '<%=luci.dispatcher.build_url("api", "misystem", "set_ps_service")%>',
            dataType: 'json',
            timeout: 5000,
            type: 'POST',
            data: $.extend({}, params, payload),
            success: function( rsp ) {
                // 防止接口返回太快导致进度框闪屏
                setTimeout(function() {
                    loadingDialog.close()
                    if( rsp.code === 0 ) {
                        // setup without port_map info, no need to wait for network reload
                        if (no_port_map || payload.enable == 0) {
                            // show success message
                            $.dialog({
                                id : "success",
                                width: 390,
                                title : "<%:提示信息%>",
                                content : "<%:保存成功%>",
                                ok: function(){},
                                beforeunload: function() {
                                    window.location.reload();
                                }
                            }).lock();
                        } else {
                            // wait for network reload
                            setTimeout(function() {
                                queryWanSetting()
                            }, rsp.hasOwnProperty("wait") ? rsp.wait * 1000 : 5000);
                        }
                    } else {
                        // show rsp.msg as error message
                        $.dialog({
                            id : "error",
                            width: 390,
                            title : "<%:提示信息%>",
                            content : rsp.msg,
                            ok: function(){},
                            beforeunload: function() {
                                window.location.reload();
                            }
                        }).lock();
                    }
                }, 2 * 1000)
            },
            error: function(err) {
                loadingDialog.close()
                $.alert('<%:网络异常，请检查是否联网%>');
            }
        });
    })
    function portObj(item){
        var name = $(item).find('.service').text()
        var port = $(item).attr('data-port')
        var obj = { 
            name:name == 'WAN2' ? 'WAN2' : 'WAN1',
            port:port
        }
        return obj
    }
    function noremind() {
        var noremind = $("#noRemind").is(':checked') ? 1 : 0;
        $.ajax({
            url: '<%=luci.dispatcher.build_url("api", "misystem", "set_wan_no_remind")%>',
            dataType: 'json',
            type: 'POST',
            data: {noremind},
            success: function( rsp ) {
                if (rsp.code != 0) {
                    $.alert(rsp.msg);
                }
            }
        })
    }
    function gotoWanSetting() {
        var token = location.href.match(/;stok=([^/]*)\//)[1];
        window.location.href = window.location.origin + '/cgi-bin/luci/;stok=' + token + '/web/setting/wan';
    }
    function queryWanSetting() {
        $.ajax({
            url: '<%=luci.dispatcher.build_url("api", "misystem", "query_wan_no_remind")%>',
            dataType: 'json',
            type: 'GET',
            success: function(rsp) {
                if (rsp.code == 0) {
                    if (rsp.noremind == 1) {
                        window.location.reload();
                    }
                    else {
                        gotoWanDialog = $.dialog({
                            width: 600,
                            title : "<%:前往上网设置配置%>",
                            content : $("#tplGoWanSetting").html(),
                            beforeunload: function() {
                                window.location.reload();
                            }
                        }).lock();
                        $("body").on("change", "#noRemind", function() {
                            noremind();
                        })
                        $("body").on("click", "#gotoWanBtn", function() {
                            gotoWanSetting()
                        })
                        $("body").on("click", "#cancelWanBtn", function() {
                            gotoWanDialog.close()
                        })
                    }
                }
            }
        })
    }
    $('#btnSubmitDualWanPort').on('click',function(e){
        e.preventDefault();
        var dialog = $.dialog({
            id : "confirm",
            width: 390,
            title : "<%:修改端口设置%>",
            content : '<div style="text-align:left">\
                       <p>配置生效过程中连接在路由器上的有线设备会短暂断开网络，且以下功能会无法使用：</p>\
                       <p>1. 此路由已生效的VPN服务</p>\
                       <p>2. QoS智能限速服务</p>\
                       <p>3. 智能选择WAN口功能</p>\
                       </br>\
                       <p>确认保存吗？</p>\
                       </div>',
            ok: function(){
                $.pub('setDualWan', [{}, false])
            },
            cancel: function () {}
        }).lock();
    })

    function init() {
        $.pub('getDualwanPortInfo')
    }

    init();
    
})
</script>
