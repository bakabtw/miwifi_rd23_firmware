#!/bin/sh
ifname_2g=$(uci -q get misc.wireless.ifname_2G)
ifname_5g=$(uci -q get misc.wireless.ifname_5G)
ifname_5g2=$(uci -q get misc.wireless.ifname_5GH)
iface_2g=$(uci show wireless | grep -w "ifname=\'$ifname_2g\'" | awk -F"." '{print $2}')
iface_5g=$(uci show wireless | grep -w "ifname=\'$ifname_5g\'" | awk -F"." '{print $2}')
iface_5g2=$(uci show wireless | grep -w "ifname=\'$ifname_5g2\'" | awk -F"." '{print $2}')
disabled_2_cur="`uci -q get wireless.$iface_2g.disabled`"
disabled_5_cur="`uci -q get wireless.$iface_5g.disabled`"
disabled_5g2=$(uci -q get wireless.$iface_5g2.disabled)
mlo_support="$(mesh_cmd mlo_support)"

. /lib/config/uci.sh

mlo_wifi_down() {
	wifi_down
}

mlo_wifi_up() {
	local devlist=""

	for ifname in "$ifname_2g" "$ifname_5g" "$ifname_5g2"; do
		local config=$(uci_get_state wireless $ifname "" "")
		[ -z "$config" ] && {
			uci_toggle_state wireless $ifname "" "ifname"
		}
		[ -n "$ifname" ] && uci_toggle_state wireless "$ifname" smartctl 0
	done

	if [ "$disabled_2_cur" != "1" ]; then
		local device="`uci -q get wireless.$iface_2g.device`"
		devlist="$devlist $device $ifname_2g"
	fi

	if [ "$disabled_5_cur" != "1" ]; then
		local device="`uci -q get wireless.$iface_5g.device`"
		devlist="$devlist $device $ifname_5g"
	fi

	if [ -n "$ifname_5g2" -a "$disabled_5g2" != "1" ]; then
		local device="`uci -q get wireless.$iface_5g2.device`"
		devlist="$devlist $device $ifname_5g2"
	fi

	/sbin/wifi enable_vap "mlo" "$devlist"
}

wifi_down() {
	#disable 2g
	local device="`uci -q get wireless.$iface_2g.device`"
	/sbin/wifi disable_vap $device $ifname_2g

	#disable 5g
	local device="`uci -q get wireless.$iface_5g.device`"
	/sbin/wifi disable_vap $device $ifname_5g

	#disable 5g2
	if [ -n "$ifname_5g2" ]; then
		local device="`uci -q get misc.wireless.if_5GH`"
		/sbin/wifi disable_vap $device $ifname_5g2
	fi

	for ifname in "$ifname_2g" "$ifname_5g" "$ifname_5g2"; do
		local config=$(uci_get_state wireless $ifname "" "")
		[ -z "$config" ] && {
			uci_toggle_state wireless $ifname "" "ifname"
		}
		[ -n "$ifname" ] && uci_toggle_state wireless "$ifname" smartctl 1
	done
}

wifi_up() {
	for ifname in "$ifname_2g" "$ifname_5g" "$ifname_5g2"; do
		local config=$(uci_get_state wireless $ifname "" "")
		[ -z "$config" ] && {
			uci_toggle_state wireless $ifname "" "ifname"
		}
		[ -n "$ifname" ] && uci_toggle_state wireless "$ifname" smartctl 0
	done

	#enable 2g
	if [ "$disabled_2_cur" != "1" ]; then
		#enable 2g interface
		local device="`uci -q get wireless.$iface_2g.device`"
		/sbin/wifi enable_vap $device $ifname_2g
	fi

	if [ "$disabled_5_cur" != "1" ]; then
		#enable 5g interface
		local device="`uci -q get wireless.$iface_5g.device`"
		/sbin/wifi enable_vap $device $ifname_5g
	fi

	if [ -n "$ifname_5g2" -a "$disabled_5g2" != "1" ]; then
		#enable 5g2 interface
		local device="`uci -q get wireless.$iface_5g2.device`"
		/sbin/wifi enable_vap $device $ifname_5g2
	fi
}

mtk_wifi_down() {
	[ -n "$iface_2g" ] && /usr/sbin/wifi_update disable_iface $iface_2g
	[ -n "$iface_5g" ] && /usr/sbin/wifi_update disable_iface $iface_5g
}

mtk_wifi_up() {
	[ -n "$iface_2g" ] && /usr/sbin/wifi_update enable_iface $iface_2g
	[ -n "$iface_5g" ] && /usr/sbin/wifi_update enable_iface $iface_5g
}


if [ -d "/etc/wireless/mediatek/" ]; then
	case "$1" in
		down) mtk_wifi_down;;
		up) mtk_wifi_up;;
	esac
elif [ "$mlo_support" = "1" ]; then
	case "$1" in
		down) mlo_wifi_down;;
		up) mlo_wifi_up;;
	esac
else
	case "$1" in
		down) wifi_down;;
		up) wifi_up;;
	esac
fi
