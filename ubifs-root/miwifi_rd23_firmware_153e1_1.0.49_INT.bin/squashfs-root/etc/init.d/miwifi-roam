#!/bin/sh /etc/rc.common

USE_PROCD=1

NAME=miwifi-roam
PROG=/usr/sbin/miwifi-roam
ROAM_CONFIG_FILE="/tmp/roam.conf"

dual_band=0

check_bands() {
	local band_24g
	local band_5g

	driver=$(lsmod | cut -d' ' -f 1 | grep ath10k_core)

	if [ "$driver" == "ath10k_core" ]; then
		BANDS=$(/usr/sbin/iw dev 2> /dev/null | grep channel | cut -d' ' -f 2 | cut -d'.' -f 1)
		for channel in $BANDS
		do
			if [ "$channel" -le "13" ]; then
				band_24g=1
			elif [ "$channel" -ge "32" ]; then
				band_5g=1
			fi
		done
	else
		BANDS=$(/usr/sbin/iwconfig 2> /dev/null | sed -n 's/.*Frequency.*\([0-9]\+\)\..*/\1/p' | sort -nu)
		for band in $BANDS
		do
			if [ "$band" == "2" ]; then
				band_24g=1
			elif [ "$band" == "5" ]; then
				band_5g=1
			fi
		done
	fi

	if [ "$band_24g" == "1" ] && [ "$band_5g" == "1" ]; then
		dual_bands=1
	else
		dual_bands=0
	fi
}

configure_wlan_interfaces() {
	local iface_2g_status=0
	local iface_5g_status=0
	local wl_if_count="$(uci -q get misc.wireless.wl_if_count)"

	#configure user wlan interfaces
	local ifname_2g=$(uci -q get misc.wireless.ifname_2G)
	local if_2g=$(uci -q get misc.wireless.if_2G)
	local iface_2g=$(uci show wireless | grep -w "ifname=\'$ifname_2g\'" | awk -F"." '{print $2}')
	local disabled_2g="`uci -q get wireless.$iface_2g.disabled`"
	if [ -n "$disabled_2g" ] && [ "0" = "$disabled_2g" ]; then
		iface_2g_status=1
		sed -i "/WlanInterfaces=/ s/$/${if_2g}:${ifname_2g}/" $ROAM_CONFIG_FILE
	fi

	local ifname_5g=$(uci -q get misc.wireless.ifname_5G)
	local if_5g=$(uci -q get misc.wireless.if_5G)
	local iface_5g=$(uci show wireless | grep -w "ifname=\'$ifname_5g\'" | awk -F"." '{print $2}')
	local disabled_5g="`uci -q get wireless.$iface_5g.disabled`"
	if [ -n "$disabled_5g" ] && [ "0" = "$disabled_5g" ]; then
		iface_5g_status=1
		if [ "$iface_2g_status" = "1" ]; then
			sed -i "/WlanInterfaces=/ s/$/,${if_5g}:${ifname_5g}/" $ROAM_CONFIG_FILE
		else
			sed -i "/WlanInterfaces=/ s/$/${if_5g}:${ifname_5g}/" $ROAM_CONFIG_FILE
		fi
	fi

	local if_5gh=
	local ifname_5gh=
	if [ "$wl_if_count" -gt 2 ]; then
		if_5gh=$(uci -q get misc.wireless.if_5GH)
		ifname_5gh=$(uci -q get misc.wireless.ifname_5GH)
		if [ -n "$ifname_5gh" ]; then
			local iface_5gh=$(uci show wireless | grep -w "ifname=\'$ifname_5gh\'" | awk -F"." '{print $2}')
			local disabled_5gh="`uci -q get wireless.$iface_5gh.disabled`"
			if [ -n "$disabled_5gh" ] && [ "0" = "$disabled_5gh" ]; then
				if [ "$iface_2g_status" = "1" -o "$iface_5g_status" = "1" ]; then
					sed -i "/WlanInterfaces=/ s/$/,${if_5gh}:${ifname_5gh}/" $ROAM_CONFIG_FILE
				else
					sed -i "/WlanInterfaces=/ s/$/${if_5gh}:${ifname_5gh}/" $ROAM_CONFIG_FILE
				fi
			fi
		fi
	fi

	#configure backhaul wlan interfaces
	local bhap_radios=
	local bh_mlo_support=$(mesh_cmd bh_mlo_support)
	local bh_mlo_split=
	[ "$bh_mlo_support" = "1" ] && bhap_radios="$(uci -q get misc.mld.bh_ap_mlo)"
	[ -z "$bhap_radios" ] && bhap_radios="$(mesh_cmd backhaul get band)"
	for radio in $bhap_radios; do
		local if_backhaul=$(uci -q get wireless.bh_ap.device)
		local ifname_backhaul=$(uci -q get wireless.bh_ap.ifname)
		local disable_bh=$(uci -q get wireless.bh_ap.disabled)
		if [ -z "$ifname_backhaul" ]; then
			if_backhaul=$(uci -q get wireless.bh_ap_$radio.device)
			ifname_backhaul=$(uci -q get wireless.bh_ap_$radio.ifname)
			disable_bh=$(uci -q get wireless.bh_ap_$radio.disabled)
		fi

		if [ -n "$ifname_backhaul" ] && [ -n "$if_backhaul" ]; then
			if [ -n "$disable_bh" ] && [ "0" = "$disable_bh" ]; then
				if [ -n "$bh_mlo_split" ]; then
					sed -i "/WlanInterfacesBackhaul=/ s/$/,${if_backhaul}:${ifname_backhaul}/" $ROAM_CONFIG_FILE
				else
					sed -i "/WlanInterfacesBackhaul=/ s/$/${if_backhaul}:${ifname_backhaul}/" $ROAM_CONFIG_FILE
					bh_mlo_split=1
				fi
			fi
		fi
	done

	#configure tri-band device info
	if [ -n "$if_5gh" ]; then
		sed -i "/WlanIfTriBandDevice=/ s/$/1/" $ROAM_CONFIG_FILE
	else
		sed -i "/WlanIfTriBandDevice=/ s/$/0/" $ROAM_CONFIG_FILE
	fi
}

start_service() {
	local mesh_version=$(uci -q get xiaoqiang.common.MESH_VERSION)
	local bsd=$(uci -q get wireless.@wifi-iface[0].bsd)
	local netmode=$(uci -q get xiaoqiang.common.NETMODE)
	local capmode=$(uci -q get xiaoqiang.common.CAP_MODE)

	if [ "$mesh_version" -ge "2" ] \
		&& [ "$bsd" = "1" -o "whc_cap" = "$netmode" -o "whc_re" = "$netmode" -o "lanapmode" = "$netmode" ]; then
		
		if [ "lanapmode" = "$netmode" -a "ap" != "$capmode" -a "1" != "$bsd" ]; then
			echo "ap mode without mesh. exit"
			return 1
		fi

		check_bands
		if [ "$bsd" = "1" ] && [ "$dual_bands" -ne "1" ]; then
			echo "require both 2.4 GHz and 5 GHz to be configured. Aborting start" >>/dev/console
			return 1
		fi

		cp /etc/roam.conf /tmp/
		configure_wlan_interfaces

		procd_open_instance
		procd_set_param command "$PROG" -d -C "$ROAM_CONFIG_FILE"
		procd_set_param respawn
		procd_close_instance
		
		echo "starting miwifi-roam success" >> /dev/console
		ubus call xq_info_sync_mqtt topo_changed
	fi
}

stop_service() {
	echo "stopping miwifi-roam" >> /dev/console
}
