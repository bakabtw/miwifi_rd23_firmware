#!/bin/sh /etc/rc.common

START=99
USE_PROCD=1

NAME=topomon
PROG=/usr/sbin/topomon

bh_band_verify() {
	local wl_if_count=$(uci -q get misc.wireless.wl_if_count)
	[ $wl_if_count -lt 3 ] && return

	local is_mlo_bhlink=$(mesh_cmd is_mlo_bhlink)
	[ "$is_mlo_bhlink" = "1" ] && return

	local new_band=
	local bh_band=$(mesh_cmd backhaul get real_band)
	local cfg_bh_apiface=$(uci -q get misc.backhauls.backhaul_${bh_band}_ap_iface)
	local cur_bh_apiface=$(uci -q get wireless.bh_ap.ifname)

	local bh_mlo_support=$(mesh_cmd bh_mlo_support)
	if [ "$bh_mlo_support" = "1" ]; then
		local band_list=$(uci -q get misc.mld.sta_mlo)
		[ -z "$band_list" ] && band_list="$bh_band"
		for band in $band_list; do
			local bh_sta_disabled=$(uci -q get wireless.bh_sta_$band.disabled)
			[ "$bh_sta_disabled" != "0" ] && continue
			cur_bh_apiface=$(uci -q get wireless.bh_ap_$band.ifname)
			break
		done
	fi
	[ -z "$cur_bh_apiface" -o -z "$cfg_bh_apiface" ] && return
	if [ "$cfg_bh_apiface" != "$cur_bh_apiface" ]; then
		[ "$bh_band" = "5g" ] && new_band="5gh" || new_band="5g"
		mesh_cmd backhaul set real_band "$new_band"
	fi
}

start_service() {
	local netmode=$(uci -q get xiaoqiang.common.NETMODE)

	[ -z "$netmode" ] && return

	local mesh_version=$(uci -q get xiaoqiang.common.MESH_VERSION)
	local capmode=$(uci -q get xiaoqiang.common.CAP_MODE)

	local easymesh_support=$(mesh_cmd easymesh_support)
	if [ "$easymesh_support" = 1 ]; then
		easymesh_role=$(uci -q get xiaoqiang.common.EASYMESH_ROLE)
	fi

	if [ -n "$mesh_version" ] && [ "$mesh_version" -ge "2" ] \
		|| [ -n "$easymesh_role" ]; then

		if [ "$netmode" = "whc_re" ] \
				|| [ "$easymesh_role" = "agent" ]; then
			[ -z "$easymesh_role" ] && bh_band_verify
			/usr/sbin/topomon_action.sh wifi_bhcfg_update
			mkdir -p /var/run/topomon
			procd_open_instance
			procd_set_param command "$PROG" -l 6
			procd_set_param respawn
			procd_close_instance
		elif [ "$netmode" = "whc_cap" -o "$capmode" = "ap" ] \
				|| [ "$easymesh_role" = "controller" ]; then
			/usr/sbin/topomon_action.sh cap_init &
		fi
	fi
}
