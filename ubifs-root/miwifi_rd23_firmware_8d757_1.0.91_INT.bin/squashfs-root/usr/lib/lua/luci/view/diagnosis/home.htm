<%
local XQSysUtil = require "xiaoqiang.util.XQSysUtil"
local xqlanwanutil = require "xiaoqiang.util.XQLanWanUtil"
local macdefault = string.upper(xqlanwanutil.getDefaultMacAddress())
local romVersion = XQSysUtil.getDisplayRomVersion()
local _romChannel = XQSysUtil.getChannel()
local romChannel = _("开发版")
if _romChannel == "current" then
	romChannel = _("内测版")
end
if _romChannel == "release" then
	romChannel = _("稳定版")
end
local misc = XQSysUtil.getMiscHardwareInfo()
local bbsUrl = misc.bbs

local features = require("xiaoqiang.XQFeatures").FEATURES
local xqCountryCode = require "xiaoqiang.XQCountryCode"
local currentCountryCode = xqCountryCode.getSimCountryCode()
local hardware = string.lower( XQSysUtil.getHardware() )
if currentCountryCode == "AT" then
    hardware = hardware.."_at"
end
local color = XQSysUtil.getColor()
local routerSrc = resource.."/web/img/topograph/".."router_"..hardware.."_".. color..".png"
%>
<%include("web/inc/head")%>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
<meta http-equiv="cache-control" content="max-age=0" />
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="expires" content="0" />
<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
<meta http-equiv="pragma" content="no-cache" />
<title><%:小米路由器%></title>
<link href="<%=resource%>/web/css/bc.css?v=<%=ver%>" rel="stylesheet">
<link href="<%=resource%>/diagnosis/css/diagnosis.css?v=<%=ver%>" rel="stylesheet">
</head>
<body class="diagnosis">
<div id="doc">
	<div id="hd">
		<h1 class="diagnosis-status" id="nettbstatus"><%:小米路由器网络诊断中...%></h1>
		<div class="netmap">
			<ul class="clearfix">
				<li class="devices">
					<img src="<%=resource%>/diagnosis/img/ico_devices.png">
					<p><%:终端设备%></p>
				</li>
				<li id="devline" class="line line-scaning"></li>
				<li class="router">
					<img src="<%=routerSrc%>">
					<p><%:小米路由器%></p>
				</li>
				<li id="netli" class="line">
					<div id="singleLine">
						<div class="netname"></div>
						<div id="netline" class="line line-scaning"></div>
					</div>
					<div id="multiLine" style="display: none;">
						<div>
							<div class="netname"></div>
							<div id="aboveline" class="line line-scaning line-double"></div>
						</div>
						<div>
							<div class="netname"></div>
							<div id="belowline" class="line line-scaning"></div>
						</div>
					</div>
				</li>
				<li class="internet">
					<img src="<%=resource%>/diagnosis/img/ico_internet.png">
					<p><%:互联网%></p>
				</li>
			</ul>
		</div>
	</div>
	<div id="bd" class="mod-giagnosis-step">
		<div class="item scaning">
			<%:正在进行网络诊断，请稍候%>
			<div class="loading-bar" style="width:300px;"></div>
		</div>
		<div class="item result-ok" style="display:none;">
			<img src="<%=resource%>/diagnosis/img/ico_succ.png">
			<p><%:恭喜！网络连接正常%></p>
			<a href="" class="btn btn-dft2 btn-s rediagnosis"><span><%:重新诊断%></span></a>
			<a href="/" class="btn btn-dft2 btn-s" style="margin-left:20px;"><span><%:返回首页%></span></a>
		</div>
		<div class="item result-err" style="display:none;">
			<div id="giagnosisresult"></div>
			<div class="btns">
				<a href="" class="btn btn-dft2 btn-s rediagnosis"><span><%:重新诊断%></span></a>
				<a href="/" class="btn btn-dft2 btn-s" style="margin-left:20px;"><span><%:返回首页%></span></a>
			</div>
		</div>
	</div>
	<div id="ft">
		<p><%:系统版本%>: MiWiFi Rom <%=romVersion%> <%=romChannel%>&nbsp;&nbsp;&nbsp;&nbsp;<%:MAC地址%>: <%=macdefault%></p>
		<p>&copy; 2024 <%:小米路由器%> <span class="split">|</span> <a href="http://miwifi.com" target="_blank"><%:小米路由器后台%></a></p>
	</div>
</div>
<script type="text/tmpl" id="tplnettdres">
<table>
	<thead>
		<tr>
			<th class="s0"><%:诊断问题%></th>
			<th class="s1"><%:可能原因%></th>
			<th class="s2"><%:解决办法%></th>
		</tr>
	</thead>
	<tbody>
		{for(var j=0, wannums=$nettb.length;j<wannums;j++)}
		<tr style="border:1px solid #777">
			<td class="s0 wrap">{$nettb[j].wanname}: {$nettb[j].title}</td>
			<td class="s3 wrap" colspan="2">
				<table class="resolvetb">
				{for(var i=0, len=$nettb[j].reason.length;i<len;i++)}
				<tr {if(i==0)}class="first"{/if}>
				<td class="ss0">{$nettb[j].reason[i]}</td>
				<td class="ss1">{$nettb[j].resolve[i]['text']}</td>
				<td class="ss2">{$nettb[j].resolve[i]['action']}</td>
				</tr>
				{/for}
				</table>
			</td>
		</tr>
		{/for}
	</tbody>
</table>
</script>
<script type="text/tmpl" id="tplnettdresMobile">
<table>
    <thead>
        <tr>
            <th class="gray"><%:诊断问题%></th>
        </tr>
    </thead>
    <tbody>
        {for(var j=0, wannums=$nettb.length;j<wannums;j++)}
        <tr style="border:1px solid #777">
            <td>
                <table class="resolvetb">
                    <tr class="first">
                        <td class="wrap">{$nettb[j].wanname}: {$nettb[j].title}</td>
                    </tr>
                    {for(var i=0, len=$nettb[j].reason.length;i<len;i++)}
                    <tr>
                        <td class="wrap">
                            <div class="clearfix"><span class="label gray"><%:可能原因%>:</span>  <div class="oh">{$nettb[j].reason[i]}</div> </div>
                            <div class="clearfix"><span class="label gray"><%:解决办法%>: </span> <div class="oh">{$nettb[j].resolve[i]['text']} </div> </div>
                            <div class="btn-div">{$nettb[j].resolve[i]['action']}</div>
                        </td>
                    </tr>
                    {/for}
                </table>
            </td>
        </tr>
        {/for}
    </tbody>
</table>
</script>
<%include("web/inc/g.js")%>
<script>
$(function(){
	$('.rediagnosis').attr('href',window.location.href)
	if (!window.location.origin){
		window.location.origin = window.location.protocol+"//"+window.location.host;
	}
	var pages = ['setting', 'prosetting', 'apsetting'];
	function buildUrl( s, token, page){
		if ($.isEmptyObject(page)) {
			if ('<%=features["system"]["dt_spec"]%>' == "1") {
				page = "prosetting";
			}
			else {
				page = "setting";
			}
		}
		if ($.inArray(page, pages) != -1) {
			return window.location.origin + '/cgi-bin/luci/;stok=' + token+ '/web/' + page + '/' + s;
		}
		else {
			alert("error page to redirect");
		}
	}
	function buildAction( action,err_index,page){
          var url;
          if ( /;stok=/.test(location.href)) {
            var token = location.href.match(/;stok=([^/]*)\//)[1];
            url = buildUrl(action, token, page);
          } 
          else {
            if ( /;stok=/.test(location.href)) {
              if('2' == err_index || '6' == err_index || '7' == err_index ){
                var token = location.href.match(/;stok=([^/]*)\//)[1];
                url = buildUrl(action, token, page);
              }
            }
            else{
              url = window.location.origin + '/cgi-bin/luci/web/login?action=' + action;
            }
          }
          return '<a class="btn btn-dft3 btn-s" href="' + url + '"><span><%:立即修复%></span></a>';
        }
    var isMobile = function(){
        return navigator.userAgent.match( /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i )
    };

	function GetQueryParam(name) {
		var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
		var r = window.location.search.substr(1).match(reg); //获取url中"?"符后的字符串并正则匹配
		var context = "";
		if (r != null) {
			context = r[2];
		}
		return context == null || context == "" || context == "undefined" ? "" : context;
	}
	function tableRowsMerge(tableId, colNum) {
		var firsttd = "",
			currenttd = "",
			rowCnt = 0,
			obj = $(tableId + " tr td:nth-child(" + colNum + ")");
		obj.each(function (i) {
			if (i == 0) {
				firsttd = $(this);
				rowCnt = 1;
			}
			else {
				currenttd = $(this);
				if (firsttd.text() == currenttd.text()) {
					rowCnt++;
					currenttd.hide();
					firsttd.attr("rowSpan", rowCnt);
				}
				else {
					firsttd = $(this);
					rowCnt = 1;
				}
			}
		})
	}

	function balancedRes(rsp) {
		var nettb = [];
		var needMerge = false;
		var diagnosisRes = {};
		for (var i = 0; i < rsp.info.length; i++) {
			if (rsp.info[i].error && rsp.info[i].error > 0) {
				var netinfo = {};
				if (rsp.info[i].wantype == 'cpe') {
					var error = rsp.info[i].error;
					if (error == "16" || error == "17" || error == "18") {
						error = "13";
					}
					else if (error == "19" || error == "15") {
						error = "14";
					}
					netinfo = cpeResults[error];
					netinfo.wanname = "<%:移动网络%>";
					if (error == '14') {
						needMerge = true;
					}
				}
				else {
					netinfo = mapResults[rsp.info[i].error];
					netinfo.wanname = rsp.info[i].wanname;
					if ('<%=features["system"]["cpe"]%>' == "1") {
						netinfo.wanname = "<%:有线网络%>";
					}
				}
				nettb.push(JSON.parse(JSON.stringify(netinfo)));
			}
		}
		diagnosisRes["needMerge"] = needMerge;
		diagnosisRes["nettb"] = nettb;
		return diagnosisRes;
	}
	function backupRes(rsp) {
		var nettb = [];
		var needMerge = false;
		var isNetTrouble = true;
		var diagnosisRes = {};
		for (var i = 0; i < rsp.info.length; i++) {
			if (rsp.info[i].error && rsp.info[i].error > 0) {
				var netinfo = {};
				if (rsp.info[i].wantype == 'cpe') {
					var error = rsp.info[i].error;
					if (error == "16" || error == "17" || error == "18") {
						error = "13";
					}
					else if (error == "19" || error == "15") {
						error = "14";
					}
					netinfo = cpeResults[error];
					netinfo.wanname = "<%:移动网络%>";
					if (error == '14') {
						needMerge = true;
					}
				}
				else {
					netinfo = mapResults[rsp.info[i].error];
					netinfo.wanname = rsp.info[i].wanname;
					if ('<%=features["system"]["cpe"]%>' == "1") {
						netinfo.wanname = "<%:有线网络%>";
					}
				}
				nettb.push(JSON.parse(JSON.stringify(netinfo)));
			}
			else {
				isNetTrouble = false;
			}
		}
		// 都不通畅，返回所有WAN的诊断结果
		if (isNetTrouble) {
			diagnosisRes["needMerge"] = needMerge;
			diagnosisRes["nettb"] = nettb;
		}
		// 单路通畅，返回空nettb表示诊断正常
		else {
			diagnosisRes["nettb"] = [];
		}

		return diagnosisRes;
	}
	function indexWanRes(rsp, index) {
		var nettb = [];
		var needMerge = false;
		var diagnosisRes = {};
		if (rsp.info[index].error && rsp.info[index].error > 0) {
			var netinfo = {};
			if (rsp.info[index].wantype == 'cpe') {
				var error = rsp.info[index].error;
				if (error == "16" || error == "17" || error == "18") {
					error = "13";
				}
				else if (error == "19" || error == "15") {
					error = "14";
				}
				netinfo = cpeResults[error];
				netinfo.wanname = "<%:移动网络%>";
				if (error == '14') {
					needMerge = true;
				}
			}
			else {
				var netinfo = mapResults[rsp.info[index].error];
				netinfo.wanname = rsp.info[index].wanname;
				if ('<%=features["system"]["cpe"]%>' == "1") {
					netinfo.wanname = "<%:有线网络%>";
				}
			}
			nettb.push(JSON.parse(JSON.stringify(netinfo)));
		}
		diagnosisRes["needMerge"] = needMerge;
		diagnosisRes["nettb"] = nettb;

		return diagnosisRes;
	}

	// 根据诊断结果填充页面
	function fillNettbTable(diagnosisRes) {
		// 网络通畅
		if (diagnosisRes.nettb && diagnosisRes.nettb.length == 0) {
			$("#singleLine").show().siblings("#multiLine").hide();
			netli.className = 'line';
			devline.className = 'line line-ok';
			netline.className = 'line line-ok';
			netstatus.innerHTML = '<%:网络诊断完成，未发现错误%>';
			$nettbContainer.find('.item').hide();
			$nettbContainer.find('.result-ok').show();
		}
		// 单WAN不通
		else if (diagnosisRes.nettb && diagnosisRes.nettb.length == 1){
			$("#singleLine").show().siblings("#multiLine").hide();
			$("#netline").siblings("div").text(diagnosisRes.nettb[0].wanname);
			netli.className = 'line single';
			devline.className = 'line line-ok';
			netline.className = 'line line-err';
			netstatus.innerHTML = '<%:网络诊断完成，发现错误%>';
			$nettbContainer.find('.item').hide();
			var tpl = isMobile() ? $('#tplnettdresMobile').html() : $('#tplnettdres').html();
			var res = StringH.tmpl(tpl, {
				nettb: diagnosisRes.nettb
			});
			$('#giagnosisresult').html(res);
			$nettbContainer.find('.result-err').show();
			if (diagnosisRes.needMerge) {
				tableRowsMerge("#giagnosisresult", 2);
				tableRowsMerge("#giagnosisresult", 3);
			}
		}
		// 多WAN不通
		else if (diagnosisRes.nettb && diagnosisRes.nettb.length > 1){
			// CPE 要求移动网络在前，采用降序
			if ('<%=features["system"]["cpe"]%>' == "1") {
				diagnosisRes.nettb.sort(arrayCompare("wanname", "DESC"));
			}
			// Router 要求WAN1在前，采用升序
			else {
				diagnosisRes.nettb.sort(arrayCompare("wanname", "ASC"));
			}
			$("#multiLine").show().siblings("#singleLine").hide();
			$("#aboveline").siblings("div").text(diagnosisRes.nettb[0].wanname);
			$("#belowline").siblings("div").text(diagnosisRes.nettb[1].wanname);
			devline.className = 'line line-ok';
			netli.className = 'line double';
			aboveline.className = 'line line-err';
			belowline.className = 'line line-err';
			netstatus.innerHTML = '<%:网络诊断完成，发现错误%>';
			$nettbContainer.find('.item').hide();
			var tpl = isMobile() ? $('#tplnettdresMobile').html() : $('#tplnettdres').html();
			var res = StringH.tmpl(tpl, {
				nettb: diagnosisRes.nettb
			});
			$('#giagnosisresult').html(res);
			$nettbContainer.find('.result-err').show();
			if (diagnosisRes.needMerge) {
				tableRowsMerge("#giagnosisresult", 2);
				tableRowsMerge("#giagnosisresult", 3);
			}
		}
		else {
			alert('<%:系统异常，请刷新重试%>');
		}
	}

	var apiNettb = '<%=luci.dispatcher.build_url("api", "xqnetdetect", "nettb2")%>';
	var mapResults = {
		'1': {
			title: '<%:路由器没有检测到WAN口网线接入%>',
			reason: ['<%:路由器WAN口没有网线接入%>','<%:接入路由器的网线损坏了%>','<%:路由器网络接口损坏了%>'],
			resolve: [
				{ text: '<%:请检查路由器是否已经插好网线%>', action: ''},
				{ text: '<%:更换一根网线再尝试连接%>', action: ''},
				{ text: '<%:联系客服检修%>', action: ''}
			]
		},
		'2': {
			title: '<%:DHCP服务没有响应%>',
			reason: ['<%:当前接入的网络可能不支持DHCP连接模式%>','<%:DHCP服务异常%>'],
			resolve: [
				{ text: '<%:请检查是否需要修改外网连接方式%>', action: buildAction('wan','2')},
				{ text: '<%:请联系运营商解决%>', action: ''}
			]
		},
		'3': {
			title: '<%:宽带拨号服务无响应%>',
			reason: ['<%:调制解调器（猫）拨号异常%>'],
			resolve: [
				{ text: '<%:尝试重启一下调制解调器（猫）再拨号%>', action: ''}
			]
		},
		'4': {
			title: '<%:上级网络IP与路由器局域网IP有冲突%>',
			reason: ['<%:上级网络IP与路由器局域网IP有冲突%>'],
			resolve: [{ text: '<%:请检查路由器局域网IP地址设置%>', action: '<a href="#" id="ripconflict" class="btn btn-dft3 btn-s"><span><%:立即修复%></span></a>'}]
		},
		'5': {
			title: '<%:网关不可达%>',
			reason: ['<%:网关不可达%>'],
			resolve: [{ text: '<%:请检查路由器上级网络的连接和相关设置是否有误%>', action: ''}]
		},
		'6': {
			title: '<%:DNS服务器无响应%>',
			reason: ['<%:可能是DNS服务器设置错误%>'],
			resolve: [{ text: '<%:请检查DNS设置是否有误，若无特殊需求建议使用默认推荐设置。%>', action: buildAction('wan','6')}]
		},
		'7': {
			title: '<%:自定义的DNS服务无响应%>',
			reason: ['<%:可能是DNS服务器设置错误%>'],
			resolve: [{ text: '<%:请修改DNS设置，若无特殊需求建议使用默认推荐设置%>', action: buildAction('wan','7')}]
		},
		'8': {
			title: '<%:中继连接出现异常%>',
			reason: ['<%:中继服务出现异常%>'],
			resolve: [{ text: '<%:请检查中继设置是否有误，并重新尝试中继%>', action: ''}]
		},
		'9': {
			title: '<%:中继连接出现异常%>',
			reason: ['<%:中继服务出现异常%>'],
			resolve: [{ text: '<%:请检查中继设置是否有误，并重新尝试中继%>', action: ''}]
		},
		'10': {
			title: '<%:网络访问出现异常%>',
			reason: ['<%:网络访问出现异常%>'],
			resolve: [{ text: '<%:请检查静态IP等设置是否有误%>', action: ''}]
		},
		'19': {
			title: '<%:网络访问出现异常%>',
			reason: ['<%:网络访问出现异常%>'],
			resolve: [{ text: '<%:请检查静态IP等设置是否有误%>', action: ''}]
		},
		'31': {
			title: '<%:宽带拨号出现多播异常%>',
			reason: ['<%:可能是出现了宽带同账号多播问题%>'],
			resolve: [{ text: '<%:建议重启调制解调器（猫）和路由器重新尝试拨号%>', action: ''}]
		},
		'32': {
			title: '<%:PPPoE拨号失败(错误码691)%>',
			reason: ['<%:宽带拨号账号密码输入错误%>','<%:宽带因欠费无法继续使用%>'],
			resolve: [
				{ text: '<%:请检查账号密码是否输入正确%>', action: buildAction('wan')},
				{ text: '<%:联系运营商解决%>', action: ''}
			]
		},
		'33': {
			title: '<%:PPPoE拨号失败(错误码691)%>',
			reason: ['<%:宽带拨号账号密码输入错误%>','<%:宽带因欠费无法继续使用%>'],
			resolve: [
				{ text: '<%:请检查账号密码是否输入正确%>', action: buildAction('wan')},
				{ text: '<%:联系运营商查询宽带是否欠费%>', action: ''}
			]
		},
		'34': {
			title: '<%:PPPoE拨号失败(错误码691)%>',
			reason: ['<%:宽带因欠费无法继续使用%>','<%:宽带运营商机房故障%>'],
			resolve: [
				{ text: '<%:联系运营商查询宽带是否欠费%>', action: ''},
				{ text: '<%:联系运营商了解是否当地有线路故障%>', action: ''}
			]
		},
		'35': {
			title: '<%:PPPoE拨号失败(错误码678)%>',
			reason: ['<%:拨号状态异常%>','<%:拨号状态异常%>','<%:拨号状态异常%>','<%:拨号状态异常%>','<%:PPPoE拨号被关闭(错误码250)%>'],
			resolve: [
				{ text: '<%:办法1:尝试关闭调制解调器(猫)和路由器，几分钟后重新通电再次尝试拨号%>', action: ''},
				{ text: '<%:办法2:使用电脑或者旧路由器完成拨号，然后手工选择“结束连接”或“关闭连接”，再尝试使用小米路由器拨号。%>', action: ''},
				{ text: '<%:办法3:尝试在路由器上网设置中进行mac地址克隆，然后重新拨号%>', action: buildAction('wan')},
				{ text: '<%:办法4:尝试调整WAN口协商速率，然后重新拨号%>', action: buildAction('wan')},
				{ text: '<%:办法:访问路由器管理后台miwifi.com手工点击重接；或重启路由器自动重连%>', action: ''}
			]
		},
		'36': {
			title: '<%:PPPoE拨号失败(错误码678)%>',
			reason: ['<%:宽带因欠费无法继续使用%>','<%:更换了接入宽带%>'],
			resolve: [
				{ text: '<%:联系运营商查询宽带是否欠费%>', action: ''},
				{ text: '<%:检查WAN口接入的宽带是否已经变更%>', action: ''}
			]
		}
	};
	if ('<%=features["system"]["dt_spec"]%>' == "1") {
	var cpeResults = {
		'12': {
			title: '<%:SIM卡验证问题%>',
			reason: ['<%:未插入SIM卡%>','<%:SIM卡损坏%>','<%:SIM卡需要验证PIN码%>','<%:SIM卡需要验证PUK码%>'],
			resolve: [
				{ text: '<%:请选择合适的SIM卡插入设备%>', action: ''},
				{ text: '<%:请联系运营商更换SIM卡%>', action: ''},
				{ text: '<%:请查看SIM卡包装上的默认PIN码，或联系运营商咨询%>', action: ''},
				{ text: '<%:请查看SIM卡包装上的默认PUK码，或联系运营商咨询%>', action: ''}
			]
		},
		'13': {
			title: '<%:配置错误%>',
			reason: ['<%:APN配置错误%>','<%:未开启数据网络%>','<%:未开启漫游%>','<%:使用流量超过设定的流量上限%>'],
			resolve: [
				{ text: '<%:请进入上网设置页面进行设置，具体APN配置信息可联系运营商确认%>', action: buildAction('wan','2', 'prosetting')},
				{ text: '<%:请进入上网设置页面开启%>', action: buildAction('wan','2', 'prosetting')},
				{ text: '<%:请进入上网设置页面开启%>', action: buildAction('wan','2', 'prosetting')},
				{ text: '<%:请进入其他设置页面设置%>', action: buildAction('upnp','2', 'prosetting')}
			]
		},
		'14': {
			title: '<%:注网失败%>',
			reason: ['<%:SIM卡欠费%>','<%:SIM卡流量超过运营商套餐%>', '<%:CPE放置位置信号过差%>'],
			resolve: [
				{ text: '<%:可咨询运营商确认话费或流量，若未欠费或流量超额，请重置设备后再试%>', action: ''},
				{ text: '<%:可咨询运营商确认话费或流量，若未欠费或流量超额，请重置设备后再试%>', action: ''},
				{ text: '<%:可先用手机检测信号强度，将CPE放置在信号更好的地方再试%>', action: ''}
			]
		}
	}
	}
	else {
		var cpeResults = {
		'12': {
			title: '<%:SIM卡验证问题%>',
			reason: ['<%:未插入SIM卡%>','<%:SIM卡损坏%>','<%:SIM卡需要验证PIN码%>','<%:SIM卡需要验证PUK码%>'],
			resolve: [
				{ text: '<%:请选择合适的SIM卡插入设备%>', action: ''},
				{ text: '<%:请联系运营商更换SIM卡%>', action: ''},
				{ text: '<%:请查看SIM卡包装上的默认PIN码，或联系运营商咨询%>', action: ''},
				{ text: '<%:请查看SIM卡包装上的默认PUK码，或联系运营商咨询%>', action: ''}
			]
		},
		'13': {
			title: '<%:配置错误%>',
			reason: ['<%:APN配置错误%>','<%:未开启数据网络%>','<%:未开启漫游%>','<%:使用流量超过设定的流量上限%>','<%:附近无法搜到设备锁定的频段%>'],
			resolve: [
				{ text: '<%:请进入上网设置页面进行设置，具体APN配置信息可联系运营商确认%>', action: buildAction('wan','2')},
				{ text: '<%:请进入上网设置页面开启%>', action: buildAction('wan','2')},
				{ text: '<%:请进入上网设置页面开启%>', action: buildAction('wan','2')},
				{ text: '<%:请进入其他设置页面设置%>', action: buildAction('upnp','2', 'prosetting')},
				{ text: '<%:请进入其他设置页面设置（建议改为全部频段)%>', action: buildAction('upnp','2', 'prosetting')}
			]
		},
		'14': {
			title: '<%:注网失败%>',
			reason: ['<%:SIM卡欠费%>','<%:SIM卡流量超过运营商套餐%>','<%:附近无设备支持的频段%>','<%:CPE放置位置信号过差%>'],
			resolve: [
				{ text: '<%:可咨询运营商确认话费或流量，若未欠费或流量超额，请重置设备后再试%>', action: ''},
				{ text: '<%:可咨询运营商确认话费或流量，若未欠费或流量超额，请重置设备后再试%>', action: ''},
				{ text: '<%:请查看设备频段，并咨询运营商何处具有对应频段的网络覆盖%>', action: ''},
				{ text: '<%:可先用手机检测信号强度，将CPE放置在信号更好的地方再试%>', action: ''}
			]
		}
	}
	}
	var $nettbContainer = $('.mod-giagnosis-step');
	var devline = document.getElementById('devline');
	var netline = document.getElementById('netline');
	var netli   = document.getElementById('netli');
	var aboveline = document.getElementById('aboveline');
	var belowline = document.getElementById('belowline');
	var netstatus = document.getElementById('nettbstatus');
	function showNettbResult(multiwan, policy) {
		$.getJSON(apiNettb, function( rsp ){
			// 根据传参显示指定WAN口诊断结果
			var index = 0;
			var diagnosisRes = {}
			index = GetQueryParam("index");
			if ( rsp.code == 0) {
				// wanname升序排列
				rsp.info.sort(arrayCompare("wanname", "ASC"));
				// 未传参，根据多wan策略显示正确的WAN口诊断结果
				if (index === "") {
					// 单wan模式
					if (multiwan == 0) {
						// 优先查看disabled字段
						$.each(rsp.info, function(i, item) {
							if (item.disabled == 0) {
								index = i;
								return false;
							}
						});
						if (index !== "") {
							diagnosisRes = indexWanRes(rsp, index);
						}
					}
					// 均衡模式获取全部wan信息
					else if (policy == 0) {
						diagnosisRes = balancedRes(rsp);
					}
					// 备份模式有一路通则通
					else if (policy == 1 || policy == 2) {
						diagnosisRes = backupRes(rsp);
					}
					// 单wan模式仅展示指定wan
					else if (policy == 3 || policy == 4) {
						index = Number(policy) - 3;
						diagnosisRes = indexWanRes(rsp, index);
					}
				}
				// 有传参，显示指定WAN口
				else if (rsp.info[index]) {
					diagnosisRes = indexWanRes(rsp, index);
				}
				else {
					alert('<%:系统异常，请刷新重试%>');
					return;
				}
				fillNettbTable(diagnosisRes);
			}
			else {
				alert('<%:系统异常，请刷新重试%>');
			}
		});
	}
	// 获取多wan策略
	$.sub('multiWanEvent', function() {
		var currwan = "wan",
			multiwan = 0,
			policy = 0;
		$.ajax({
			url: '<%=luci.dispatcher.build_url("api", "misystem", "get_ps_service")%>',
			type: 'GET',
			datatype: 'json',
			async: true,
			data: {"service":'multiwan'},
			success: function( rsp ){
				rsp = $.parseJSON(rsp);
				if (rsp.code == 0 && rsp.multiwan) {
					policy = rsp.multiwan.policy.mode;
					multiwan = rsp.multiwan.enable;
					showNettbResult(multiwan, policy);
				}
			}
		});
	}) 
	$('.btn-retry').click(function(e){
		e.preventDefault();
		location.reload(1);
	});

	$( 'body' ).delegate( '#ripconflict', 'click', function(e){
		e.preventDefault();
		var requestURL = '<%=luci.dispatcher.build_url("api", "misystem","r_ip_conflict")%>';
		var requestData = {};		
		var ripconflictDialog =  $.loadingDialog({
			title: '<%:修复中…%>',
			content: '<%:操作生效，等待修复完成…%>'
		})
		$.getJSON( requestURL, requestData, function(res){
			if( res.code == 0 ){
				ripconflictDialog.close();
				$.pub( 'wifi:wifiSetSucessDialog');;
				var ip = window.location.host;
				window.setTimeout('window.top.location.href="http://' + ip + '";', 1000);
			}else {
				ripconflictDialog.close();
				$.alert( res.msg );
			}
		});
	});		
		
	$(function() {
		$.pub('multiWanEvent');
	});
});
</script>
</body>
</html>
